<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.learn.mapper.StudentMapper">


    <update id="updateById">
        update student
        <set>
            <if test="name != null and name!= ''"> name = #{name}, </if>
            <if test="no != null and no!= ''"> no = #{no}, </if>
            <if test="gender != null"> gender = #{gender}, </if>
            <if test="phone != null and phone!= ''"> phone = #{phone}, </if>
            <if test="idCard != null and idCard!= ''"> id_card = #{idCard}, </if>
            <if test="isCollege != null"> is_college = #{isCollege}, </if>
            <if test="address != null and address!= ''"> address = #{address}, </if>
            <if test="degree != null"> degree = #{degree}, </if>
            <if test="graduationDate != null"> graduation_date = #{graduationDate}, </if>
            <if test="clazzId != null"> clazz_id = #{clazzId}, </if>
        </set>
        where id = #{id}
    </update>

    <delete id="deleteByIds">
        delete from student where id in
            <foreach collection="ids" item="id" open="(" close=")" separator="'">
                #{id}
            </foreach>
    </delete>

    <select id="list" resultType="com.learn.pojo.Student">
        select s.*, c.name clazzName
        from student s
        left join clazz c
        on s.clazz_id = c.id
        <where>
            <if test="name != null and name != ''">
                s.name like concat('%',#{name},'%')
            </if>
            <if test="degree != null">
                and s.degree = #{degree}
            </if>
            <if test="classId != null">
                and s.class_id = #{classId}
            </if>
        </where>
        order by s.update_time desc
    </select>
    <select id="countStuClazzData" resultType="java.util.Map">
        select
            (case s.clazz_id
                when 6 then 'Java EE'
                when 8 then 'Full Stack with AI'
                when 11 then 'Data Science'
                when 14 then 'UI/UX design'
                when 15 then 'JavaSE'
                when 17 then 'Web Development'
                when 20 then 'Python 3.0'
                when 22 then 'C++ embedded software'
                when 23 then 'Data analytics'
                else 'Unknown'
            end) as clazzname,
            count(*) as total
            from student s
                group by clazzname order by total
    </select>

    <select id="countStuDegreeData" resultType="java.util.Map">
        select
            (case s.degree
                 when 3 then 'High school'
                 when 4 then 'Undergraduate'
                 when 5 then 'Master'
                 when 6 then ' Doctor'
                 else 'Unknown'
                end) as name,
            count(*) as value
        from student as s
        group by s.degree
    </select>

</mapper>
